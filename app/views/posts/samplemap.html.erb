<input type="text" size="55" id="search" placeholder="検索したい施設" />
<input type="button" size="55" value="検索" onClick="SearchGo()" />
<div id="map_canvas"></div>


<style>
    #map_canvas{
        height: 600px;
        width: 600px;
    }
</style>
<script>
var myMap;
var service;

// マップの初期設定
function initMap() {
    if (navigator.geolocation) {
        // ユーザーの現在の位置情報を取得
        navigator.geolocation.getCurrentPosition(function(position) {
            var initPos = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
            
            // 地図のプロパティを設定
            var myOptions = {
                zoom: 15,
                center: initPos,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            myMap = new google.maps.Map(document.getElementById("map_canvas"), myOptions);

            // 検索の条件を指定（位置情報、半径、検索の分類）
            var request = {
                location: initPos,
                radius: 1000,
                type: null
            };
            service = new google.maps.places.PlacesService(myMap);
            service.search(request, Result_Places);
        });
    }
}

// 検索結果を受け取る
function Result_Places(results, status){
    if(status == google.maps.places.PlacesServiceStatus.OK) {
        for (var i = 0; i < results.length; i++) {
            var place = results[i];
            createMarker({
                 text: place.name,
                 position: place.geometry.location
            });
        }
    }
}

// 検索を行う
function SearchGo() {
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function(position) {
            var initPos = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
            var myOptions = {
                center: initPos,
                zoom: 15,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            myMap = new google.maps.Map(document.getElementById("map_canvas"), myOptions);
            service = new google.maps.places.PlacesService(myMap);
            var myword = document.getElementById("search").value;
            var request = {
                query: myword,
                radius: 5000,
                location: initPos
            };
            service.textSearch(request, result_search);
        });
    }
}

// 検索の結果を受け取る
function result_search(results, status) {
    var bounds = new google.maps.LatLngBounds();
    for(var i = 0; i < results.length; i++){
        createMarker({
             position: results[i].geometry.location,
             text: results[i].name,
             map: myMap
         });
        bounds.extend(results[i].geometry.location);
    }
    myMap.fitBounds(bounds);
}

// マーカーを作成
function createMarker(options) {
    options.map = myMap;
    var marker = new google.maps.Marker(options);
    var infoWnd = new google.maps.InfoWindow();
    infoWnd.setContent(options.text);
    google.maps.event.addListener(marker, 'click', function(){
        infoWnd.open(myMap, marker);
    });
    return marker;
}
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAPS_API_KEY'] %>&libraries=places&callback=initMap" async defer></script>